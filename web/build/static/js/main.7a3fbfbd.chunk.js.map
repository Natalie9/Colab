{"version":3,"sources":["services/api.ts","pages/Landing/index.tsx","components/PageHeader/index.tsx","components/Input/index.tsx","components/InputNumber/index.tsx","components/Textarea/index.tsx","components/SelectSkill/index.tsx","pages/ContactRegister/index.tsx","components/ContactItem/index.tsx","pages/ContactList/index.tsx","routes.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/images/Logo_IPElab.png","assets/images/colabam.png"],"names":["api","axios","create","baseURL","Landing","useState","totalConnections","setTotalConnections","useEffect","get","then","response","total","data","id","className","src","logoImg","alt","to","style","fontSize","PageHeader","props","logo","title","children","Input","label","name","rest","htmlFor","type","InputNumber","mask","maskChar","Textarea","useStyles","makeStyles","theme","createStyles","formControl","margin","minWidth","fontWeight","chipControl","SelectSkill","options","parentFunction","selectedSkills","setSelectedSkills","classes","FormControl","InputLabel","Select","multiple","value","onChange","event","target","onMouseDown","stopPropagation","input","renderValue","selected","map","Chip","key","variant","option","MenuItem","withRouter","setName","email","setEmail","phone","setPhone","description","setDescription","skill","setSkill","setOptions","history","useHistory","onSubmit","e","post","skills","preventDefault","console","log","push","placeholder","maxLength","ContactItem","contact","whatsapp","handleConnection","onClick","href","ContactList","listContacts","setListContacts","skillsSelected","setSkillsSelected","res","sk","join","catch","Routes","path","exact","component","ContactRegister","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.7a3fbfbd.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://colabipe-dev.umbler.net/'\r\n})\r\nexport default api;","import React, { useState, useEffect } from 'react'\r\nimport Search from '@material-ui/icons/Search'\r\nimport PermContactCalendar from '@material-ui/icons/PermContactCalendar'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport logoImg from '../../assets/images/Logo_IPElab.png'\r\n\r\nimport './styles.css'\r\nimport api from '../../services/api'\r\n\r\nfunction Landing() {\r\n  const [totalConnections, setTotalConnections] = useState(0)\r\n\r\n  //essa funçao monitora a variável passada no array,\r\n  // e excecuta a função passada toda vez que ela mudar\r\n  useEffect(() => {\r\n    api.get('connection').then((response) => {\r\n      const total = response.data.total\r\n      setTotalConnections(total)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div id='page-landing'>\r\n      <div id='page-landing-content' className='container'>\r\n        <div className='logo-container'>\r\n          <img src={logoImg} alt='' className='logo-img' />\r\n\r\n          <h2 className='descricao'>\r\n            Ideias, Prototipagem e Empreendedorismo{' '}\r\n          </h2>\r\n        </div>\r\n        <div className='buttons-container'>\r\n          <Link to='/cadastrar' className='register'>\r\n            <PermContactCalendar style={{ fontSize: 32 }} />\r\n            Registrar\r\n          </Link>\r\n          <Link to='/buscar' className='search'>\r\n            <Search style={{ fontSize: 32 }} />\r\n            Buscar\r\n          </Link>\r\n        </div>\r\n        <span className='total-connections'>\r\n          Total de {totalConnections} conexões já realizadas\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Landing\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ArrowBack from '@material-ui/icons/ArrowBack'\r\nimport logo from '../../assets/images/colabam.png'\r\n\r\nimport './styles.css'\r\n\r\ninterface PageHeaderProps {\r\n  title: string\r\n}\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = (props) => {\r\n  return (\r\n    <header className='page-header'>\r\n      <div className='top-bar-container'>\r\n        <Link to='/'>\r\n          <ArrowBack style={{ fontSize: 32 }}></ArrowBack>\r\n        </Link>\r\n        <Link to='/'>\r\n          <img src={logo} alt='logo ipe lab' />{' '}\r\n        </Link>\r\n      </div>\r\n\r\n      <div className='header-content'>\r\n        <strong>{props.title}</strong>\r\n        {props.children}\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default PageHeader\r\n","import React, { InputHTMLAttributes } from 'react'\r\nimport './styles.css';\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string\r\n  label: string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ label, name, ...rest }) => {\r\n  return (\r\n    <div className='input-block'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <input type='text' id={name} {...rest} />\r\n    </div>\r\n  )\r\n}\r\nexport default Input\r\n","import React, { InputHTMLAttributes } from 'react'\r\nimport InputMask from 'react-input-mask'\r\nimport './styles.css'\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string\r\n  label: string\r\n}\r\n\r\nconst InputNumber: React.FC<InputProps> = ({ label, name, ...rest }) => {\r\n  return (\r\n    <div className='input-block'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <InputMask id={name} {...rest} mask='(99)99999-9999' maskChar=' ' />\r\n    </div>\r\n  )\r\n}\r\nexport default InputNumber\r\n","import React, { TextareaHTMLAttributes } from 'react'\r\nimport './styles.css';\r\n\r\ninterface TextareaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\r\n  name: string\r\n  label: string\r\n}\r\n\r\nconst Textarea: React.FC<TextareaProps> = ({ label, name, ...rest }) => {\r\n  return (\r\n    <div className='textarea-block'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <textarea  id={name} {...rest}/>\r\n    </div>\r\n  )\r\n}\r\nexport default Textarea\r\n","import React, { SelectHTMLAttributes, useState, useEffect } from 'react'\r\n\r\nimport {\r\n  Chip,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  Input,\r\n  MenuItem,\r\n} from '@material-ui/core'\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport './styles.css'\r\n\r\n//Props do componente\r\ninterface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  name: string\r\n  label: string\r\n  options: any\r\n  parentFunction: (st: any) => void\r\n}\r\n\r\n//style do select por meio dos 'Theme's no material ui\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: 5,\r\n      minWidth: '100%',\r\n      fontWeight: 400,\r\n      fontSize: 40,\r\n    },\r\n    chipControl: {\r\n      fontSize: 15,\r\n    },\r\n  })\r\n)\r\n\r\n//o componente em si\r\nconst SelectSkill: React.FC<SelectProps> = ({\r\n  label,\r\n  name,\r\n  options,\r\n  parentFunction,\r\n  ...rest\r\n}) => {\r\n  //skills selecionadas\r\n  const [selectedSkills, setSelectedSkills] = useState([])\r\n\r\n  const classes = useStyles()\r\n\r\n  //o UseEffect monitora o estado de 'selectedSkills'\r\n  //e cada vez que muda, ele executa a função dentro dele\r\n  //essa função chama uma parentFunction passando o novo 'selectedSkills'\r\n  useEffect(() => {\r\n    parentFunction(selectedSkills)\r\n  }, [selectedSkills])\r\n\r\n  // handleChange é acionado pelo onChange do select\r\n  // e seta o novo estado de 'SelectedSkills'\r\n  const handleChange = (event) => {\r\n    setSelectedSkills(event.target.value)\r\n  }\r\n  return (\r\n    <div className='select-block'>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id='demo-mutiple-chip-label'>{label}</InputLabel>\r\n        <Select\r\n          className='select'\r\n          multiple\r\n          value={selectedSkills}\r\n          onChange={handleChange}\r\n          onMouseDown={(event) => {\r\n            event.stopPropagation()\r\n          }}\r\n          input={<Input id='select-multiple-chip' />}\r\n          renderValue={(selected: any) => (\r\n            <div>\r\n              {selected.map((label) => (\r\n                <Chip\r\n                  className={classes.chipControl}\r\n                  key={label}\r\n                  label={label}\r\n                  variant='outlined'\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        >\r\n          {options.map((option) => (\r\n            <MenuItem\r\n              key={option.id}\r\n              value={option.name}\r\n              className={classes.chipControl}\r\n            >\r\n              {option.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  )\r\n}\r\nexport default SelectSkill\r\n","import React, { useState, FormEvent, useEffect } from 'react'\r\nimport PageHeader from '../../components/PageHeader'\r\nimport { withRouter, useHistory } from 'react-router-dom'\r\n\r\nimport './styles.css'\r\nimport Input from '../../components/Input'\r\nimport InputNumber from '../../components/InputNumber'\r\nimport Textarea from '../../components/Textarea'\r\nimport SelectSkill from '../../components/SelectSkill'\r\nimport api from '../../services/api'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ContactRegister = () => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [skill, setSkill] = useState('')\r\n  const [options, setOptions] = useState([])\r\n\r\n  useEffect(() => {\r\n    api.get('skill').then((response) => {\r\n      setOptions(response.data)\r\n    })\r\n  }, [])\r\n  let history = useHistory()\r\n\r\n  function handleCreateContact(e: FormEvent) {\r\n    api.post('/contact', {\r\n      name,\r\n      email,\r\n      phone,\r\n      description,\r\n      skills: skill,\r\n    })\r\n    e.preventDefault()\r\n    console.log({\r\n      name,\r\n      email,\r\n      phone,\r\n      description,\r\n      skill,\r\n    })\r\n\r\n    history.push('/')\r\n  }\r\n  const parFun = (value) => {\r\n    setSkill(value)\r\n  }\r\n  return (\r\n    <div id='page-contact-register'>\r\n      <PageHeader title='Cadastrar um novo contato'></PageHeader>\r\n\r\n      <main>\r\n        <form onSubmit={handleCreateContact}>\r\n          <fieldset>\r\n            <legend>Seus dados</legend>\r\n            <Input\r\n              name='name'\r\n              label='Nome completo'\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value)\r\n              }}\r\n            />\r\n            <Input\r\n              name='email'\r\n              label='Email'\r\n              type='email'\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value)\r\n              }}\r\n            />\r\n\r\n            <InputNumber\r\n              name='phone'\r\n              label='Telefone'\r\n              type='phone'\r\n              value={phone}\r\n              onChange={(e) => {\r\n                setPhone(e.target.value)\r\n              }}\r\n            ></InputNumber>\r\n            <Textarea\r\n              name='description'\r\n              label='Descrição'\r\n              placeholder='Fale um pouco sobre você'\r\n              value={description}\r\n              maxLength={250}\r\n              onChange={(e) => {\r\n                setDescription(e.target.value)\r\n              }}\r\n            ></Textarea>\r\n          </fieldset>\r\n\r\n          <fieldset>\r\n            <legend>Sobre suas habilidades</legend>\r\n\r\n            <SelectSkill\r\n              name='skill'\r\n              label='Habilidade'\r\n              value={skill}\r\n              parentFunction={(value) => {\r\n                setSkill(value)\r\n              }}\r\n              options={options}\r\n            />\r\n          </fieldset>\r\n\r\n          <footer>\r\n            <button type='submit'>Salvar cadastro</button>\r\n          </footer>\r\n        </form>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\nexport default withRouter(ContactRegister)\r\n","import React from 'react'\r\n\r\nimport './styles.css'\r\n\r\nimport api from '../../services/api'\r\n\r\ninterface ContactItemProps {\r\n  contact: {\r\n    id: number\r\n    name: string\r\n    description?: any\r\n    phone: string\r\n    email: string\r\n    skills?: Array<{\r\n      name: string\r\n    }>\r\n  }\r\n}\r\n\r\nconst ContactItem: React.FC<ContactItemProps> = ({ contact }) => {\r\n  const whatsapp =\r\n    'https://api.whatsapp.com/send?phone=55' +\r\n    contact.phone +\r\n    '&text=Olá, encontrei seu contato pelo Colab e gostaria de conversar!'\r\n\r\n  function handleConnection(id: number) {\r\n    console.log(id)\r\n    api.post('contact/' + id + '/connection/', {})\r\n  }\r\n  return (\r\n    <article className='contact-item'>\r\n      <header>\r\n        <img\r\n          src='https://icon-library.com/images/user-png-icon/user-png-icon-8.jpg'\r\n          alt='user'\r\n        />\r\n        <div>\r\n          <strong>{contact.name}</strong>\r\n          {/* <strong>Natalie Tolentino</strong> */}\r\n          {contact.skills &&\r\n            contact.skills.map((skill) => <span>{skill.name}</span>)}\r\n        </div>\r\n      </header>\r\n      <p>{contact.description}</p>\r\n      <footer>\r\n        <p onClick={() => handleConnection(contact.id)}>\r\n          Email:\r\n          <strong>\r\n            <a href={'mailto:' + contact.email}>{contact.email}</a>\r\n          </strong>\r\n        </p>\r\n        <button onClick={() => handleConnection(contact.id)}>\r\n          <a target='_blank' href={whatsapp}>\r\n            <img\r\n              src='https://logodownload.org/wp-content/uploads/2015/04/whatsapp-logo-icone-1.png'\r\n              alt='Whatsapp'\r\n            />\r\n            <p>Entrar em contato</p>\r\n          </a>\r\n        </button>\r\n      </footer>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default ContactItem\r\n","import './styles.css'\r\n\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nimport PageHeader from '../../components/PageHeader'\r\nimport ContactItem from '../../components/ContactItem'\r\nimport SelectSkill from '../../components/SelectSkill'\r\nimport api from '../../services/api'\r\n\r\nfunction ContactList() {\r\n  const [listContacts, setListContacts] = useState([\r\n    {\r\n      id: 0,\r\n      name: '',\r\n      description: null,\r\n      phone: '',\r\n      email: '',\r\n    },\r\n  ])\r\n  const [options, setOptions] = useState([])\r\n  const [skillsSelected, setSkillsSelected] = useState([])\r\n\r\n  useEffect(() => {}, [])\r\n\r\n  //essa funçao monitora a variável passada no array,\r\n  // e excecuta a função passada toda vez que ela mudar\r\n  //se o array é vazio, ela executa na inicialização\r\n  useEffect(() => {\r\n    api\r\n      .get('skill')\r\n      .then((response) => {\r\n        setOptions(response.data)\r\n        return response.data\r\n      })\r\n      .then((res) => {\r\n        const sk =\r\n          '?&skill=' +\r\n          res.map((skill) => skill.name).join('&skill=')\r\n        api.get('contact' + sk).then((response) => {\r\n          setListContacts(response.data)\r\n        })\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log('use', skillsSelected)\r\n    const sk = '?&skill=' + skillsSelected.join('&skill=')\r\n    api\r\n      .get('contact' + sk)\r\n      .then((response) => {\r\n        console.log(response.data, 'response contatos')\r\n        setListContacts(response.data)\r\n      })\r\n      .catch((res) => console.log(res))\r\n    console.log('SS and LC', skillsSelected, listContacts)\r\n  }, [skillsSelected])\r\n\r\n  useEffect(() => {\r\n    console.log('lista de contatos', listContacts)\r\n  }, [listContacts])\r\n\r\n  return (\r\n    <div id='page-contact-list' className='container'>\r\n      <PageHeader title='Estes são os contatos disponíveis'>\r\n        <form id='search-contacts'>\r\n          <SelectSkill\r\n            name='skill'\r\n            label='Habilidade'\r\n            options={options}\r\n            parentFunction={(value) => {\r\n              console.log('skill selecionada', value)\r\n              setSkillsSelected(value)\r\n            }}\r\n          />\r\n        </form>\r\n      </PageHeader>\r\n\r\n      <main>\r\n        {listContacts.map((contact) => (\r\n          <div>\r\n            <ContactItem contact={contact}></ContactItem>\r\n          </div>\r\n        ))}\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactList\r\n","import React from 'react'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport Landing from './pages/Landing'\r\nimport ContactRegister from './pages/ContactRegister'\r\nimport ContactList from './pages/ContactList'\r\n\r\nfunction Routes() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Route path='/' exact component={Landing} />\r\n      <Route path='/cadastrar' exact component={ContactRegister} />\r\n      <Route path='/buscar' exact component={ContactList} />\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\nimport './assets/styles/global.css'\nimport Routes from './routes'\n\n\nfunction App() {\n  return <Routes></Routes>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/Logo_IPElab.ec530af5.png\";","module.exports = __webpack_public_path__ + \"static/media/colabam.e4bee937.png\";"],"sourceRoot":""}